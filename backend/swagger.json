{
  "openapi": "3.0.0",
  "info": {
    "title": "Sweet Shop Management System API",
    "version": "1.0.0",
    "description": "API documentation for Sweet Shop Management System"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication endpoints"
    },
    {
      "name": "Sweets",
      "description": "Sweet inventory management endpoints"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user"]
          },
          "tokenVersion": {
            "type": "integer"
          }
        }
      },
      "Sweet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "quantity": {
            "type": "integer",
            "minimum": 0
          },
          "imageUrl": {
            "type": "string",
            "nullable": true,
            "description": "URL path to the sweet's image"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          }
        }
      }
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh access token",
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/sweets": {
      "get": {
        "tags": ["Sweets"],
        "summary": "Get all sweets",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "description": "Filter sweets by category"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sweets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sweet"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Sweets"],
        "summary": "Create a new sweet",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["name", "category", "price", "quantity"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the sweet"
                  },
                  "category": {
                    "type": "string",
                    "description": "Category of the sweet"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "Price of the sweet"
                  },
                  "quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Available quantity of the sweet"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file of the sweet"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sweet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sweet"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sweets/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "schema": {
            "type": "integer"
          },
          "required": true,
          "description": "Sweet ID"
        }
      ],
      "get": {
        "tags": ["Sweets"],
        "summary": "Get sweet by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sweet found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sweet"
                }
              }
            }
          },
          "404": {
            "description": "Sweet not found"
          }
        }
      },
      "put": {
        "tags": ["Sweets"],
        "summary": "Update sweet",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sweet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sweet updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sweet"
                }
              }
            }
          },
          "404": {
            "description": "Sweet not found"
          }
        }
      },
      "delete": {
        "tags": ["Sweets"],
        "summary": "Delete sweet",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sweet deleted successfully"
          },
          "404": {
            "description": "Sweet not found"
          }
        }
      }
    }
  }
}
